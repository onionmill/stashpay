before_all do
  ensure_git_branch(branch: 'main')
  # ensure_git_status_clean
end

package = load_json(json_path: "./package.json")

desc 'Android: Increment versionCode and set versionName to package.json version.'
private_lane :inc_ver_and do
  increment_version_code(
    gradle_file_path: "./android/app/build.gradle",
  )
  increment_version_name(
    gradle_file_path: "./android/app/build.gradle",
    version_name: package['version']
  )
end

desc 'iOS: Increment build number and set the version to package.json version.'
private_lane :inc_ver_ios do
  increment_build_number_in_xcodeproj(
    xcodeproj: './ios/StashPay.xcodeproj'
  )
  increment_version_number_in_xcodeproj(
    xcodeproj: './ios/StashPay.xcodeproj',
    version_number: package['version']
  )
end

desc 'Bump build numbers, and set the version to match the pacakage.json version.'
lane :bump do
  inc_ver_ios
  inc_ver_and
end

platform :ios do
  desc 'Build the iOS application.'
  lane :build do
    gym(scheme: 'stashpay', workspace: './ios/StashPay.xcworkspace', clean: true)
  end

  desc 'Ship to Testflight.'
  lane :beta do
    build
    # pilot
  end
end

platform :android do
  desc 'Build the Android application.'
  lane :build do
    gradle(task: 'clean', project_dir: 'android/')
    gradle(task: 'assemble', build_type: 'Release', project_dir: 'android/')
  end

  desc 'Ship to Playstore Beta.'
  lane :beta do
    build
    # supply(track: 'beta', track_promote_to: 'beta')
  end
end
